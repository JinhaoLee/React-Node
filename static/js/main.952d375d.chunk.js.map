{"version":3,"sources":["components/Navigation/Navigation.module.css","components/Navigation/Navigation.tsx","components/BootstrapTable/BootstrapTable.tsx","components/VerticallyCenteredModal/VerticallyCenteredModal.tsx","services/api.ts","components/SignupForm/SignupForm.tsx","helpers/validation.ts","components/SigninForm/SigninForm.tsx","components/BootJumbotron/BootJumbotron.tsx","components/Map/Map.tsx","pages/Home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","button","Navigation","_ref","onFetch","_useState","useState","_useState2","Object","slicedToArray","signupShow","setSignupShow","_useState3","_useState4","signinShow","setSigninShow","_useState5","sessionStorage","getItem","_useState6","isLogined","setIsLogined","handleClose","handleLogin","handleLogout","removeItem","alert","react_default","a","createElement","Fragment","Navbar","bg","variant","Brand","href","Nav","className","Link","Form","inline","ButtonToolbar","Button","Styles","onClick","components_VerticallyCenteredModal_VerticallyCenteredModal","onHide","show","type","login","BootstrapTable","data","style","height","overflow","Table","striped","bordered","hover","responsive","table","map","item","LGA","total","i","key","values","value","j","renderRows","VerticallyCenteredModal","props","Modal","assign","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","components_SigninForm_SigninForm","components_SignupForm_SignupForm","REACT_APP_ENDPOINT_URL","search","params","queries","_i","_Object$entries","entries","length","_ref3","_ref2","concat","fetch","method","headers","Authorization","then","response","json","catch","error","console","queryAPI","query","log","SignupForm","email","emailValid","password","passwordValid","touched","form","setForm","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","preventDefault","stopPropagation","body","Content-type","res","message","stop","_x","apply","this","arguments","handleBlur","field","objectSpread","defineProperty","handleChange","useCallback","_objectSpread3","target","name","test","String","toLowerCase","onSubmit","Group","controlId","Label","Control","required","placeholder","onChange","isInvalid","onBlur","Feedback","disabled","SigninSchema","Yup","shape","min","max","SigninForm","formik_esm","initialValues","validationSchema","actions","loginResponse","sent","token","setItem","setSubmitting","t0","_x2","render","formikBag","FormGroup","FormLabel","FormControl","errors","_ref4","isSubmitting","BootJumbotron","Jumbotron","Map","withScriptjs","withGoogleMap","react_google_maps_lib","defaultZoom","defaultCenter","lat","lng","isMarkerShown","position","Home","isLoading","setLoading","isShown","setIsShown","setData","_useState7","offence","area","age","gender","year","_useState8","select","setSelect","_useState9","_useState10","useEffect","offenceArray","areaArray","ageArray","genderArray","yearArray","toConsumableArray","offences","areas","ages","genders","years","fetchAPI","fetchData","fetchedData","components_Navigation_Navigation","components_BootJumbotron_BootJumbotron","Container","Row","Col","md","formSelects","_ref6","_ref5","array","push","as","renderSelects","_callee2","_context2","abrupt","result","Spinner","animation","role","components_BootstrapTable_BootstrapTable","Map_Map","googleMapURL","loadingElement","containerElement","mapElement","App","react_router_dom","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.952d375d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Navigation_button__3yFli\"};","import React, { useState } from 'react'\nimport { Button, ButtonToolbar, Form, Nav, Navbar } from 'react-bootstrap'\nimport { VerticallyCenteredModal } from '..'\nimport { IData } from '../BootstrapTable/BootstrapTable'\nimport Styles from './Navigation.module.css'\n\ninterface IProps {\n  onFetch: (fetchedData: IData) => void\n}\n\nconst Navigation: React.FC<IProps> = ({ onFetch }) => {\n  const [signupShow, setSignupShow] = useState(false)\n  const [signinShow, setSigninShow] = useState(false)\n  const [isLogined, setIsLogined] = useState(\n    sessionStorage.getItem('token') !== null\n  )\n\n  const handleClose = () => {\n    setSignupShow(false)\n    setSigninShow(false)\n  }\n\n  const handleLogin = () => {\n    setIsLogined(true)\n  }\n\n  const handleLogout = () => {\n    sessionStorage.removeItem('token')\n    setIsLogined(false)\n    alert('Hope you go back')\n  }\n\n  const renderButtons = () => {\n    if (!isLogined) {\n      return (\n        <>\n          <Button\n            variant=\"outline-info\"\n            className={Styles.button}\n            onClick={() => setSignupShow(true)}\n          >\n            Sign up\n          </Button>\n          <Button\n            variant=\"outline-info\"\n            className={Styles.button}\n            onClick={() => setSigninShow(true)}\n          >\n            Sign in\n          </Button>\n          <VerticallyCenteredModal\n            onHide={handleClose}\n            show={signupShow}\n            type={'Sign up'}\n            login={handleLogin}\n          />\n          <VerticallyCenteredModal\n            onHide={handleClose}\n            show={signinShow}\n            type={'Sign in'}\n            login={handleLogin}\n          />\n        </>\n      )\n    }\n\n    return (\n      <Button\n        variant=\"outline-info\"\n        className={Styles.button}\n        onClick={handleLogout}\n      >\n        Logout\n      </Button>\n    )\n  }\n\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">CAB230</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"\">Home</Nav.Link>\n          <Nav.Link href=\"\">Contact</Nav.Link>\n          <Nav.Link href=\"\">About</Nav.Link>\n        </Nav>\n        <Form inline>\n          {/* <FormControl\n            name=\"filter\"\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"mr-sm-2\"\n            value={form.filter}\n            onChange={handleChange}\n          /> */}\n          <ButtonToolbar>\n            {/* <Button variant=\"outline-info\" onClick={handleSearch}>\n              Search\n            </Button> */}\n            {renderButtons()}\n          </ButtonToolbar>\n        </Form>\n      </Navbar>\n    </>\n  )\n}\nexport default Navigation\n","import React from 'react'\nimport { Table } from 'react-bootstrap'\nimport Styles from './table.module.css'\n\nexport interface IData {\n  data: Array<{ [key: string]: string | number }>\n}\n\nconst BootstrapTable: React.FC<IData> = ({ data }) => {\n  const renderRows = () => {\n    if (data) {\n      const modifiedData = data.map(item => ({\n        LGA: item.LGA,\n        total: item.total,\n      }))\n      return modifiedData.map(\n        (item: { [key: string]: string | number }, i: number) => (\n          <tr key={i}>\n            {Object.values(item).map((value: string | number, j: number) => (\n              <td key={j}>{value}</td>\n            ))}\n          </tr>\n        )\n      )\n    }\n  }\n\n  return (\n    <div style={{ height: '400px', overflow: 'overlay' }}>\n      <Table\n        striped\n        bordered\n        hover\n        variant=\"dark\"\n        responsive\n        className={Styles.table}\n      >\n        <thead>\n          <tr>\n            <th>LGA</th>\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tbody>{renderRows()}</tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default BootstrapTable\n","import React from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { SigninForm, SignupForm } from '..'\n\ninterface IProps {\n  show: boolean\n  type: string\n  onHide: () => void\n  login: () => void\n}\n\nconst VerticallyCenteredModal: React.SFC<IProps> = props => {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {props.type}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {props.type === 'Sign in' ? (\n          <SigninForm onHide={props.onHide} login={props.login} />\n        ) : (\n          <SignupForm onHide={props.onHide} />\n        )}\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default VerticallyCenteredModal\n","const REACT_APP_ENDPOINT_URL = 'https://cab230.hackhouse.sh'\n\nexport function callAPI(params: string): any {\n  return fetch(`${REACT_APP_ENDPOINT_URL}/${params}`, {\n    method: 'GET',\n  }).then(response => {\n    if (!response.ok) {\n      throw response\n    }\n    return response.json()\n  })\n}\n\nexport function register(email: string, password: string) {\n  return fetch(`${REACT_APP_ENDPOINT_URL}/register`, {\n    method: 'POST',\n    body: `email=${email}&password=${password}`,\n    headers: {\n      'Content-type': 'application/x-www-form-urlencoded',\n    },\n  })\n    .then(response => response.json())\n    .catch(error => console.log(error))\n}\n\nexport function UserLogin(email: string, password: string) {\n  return fetch(`${REACT_APP_ENDPOINT_URL}/login`, {\n    method: 'POST',\n    body: `email=${email}&password=${password}`,\n    headers: {\n      'Content-type': 'application/x-www-form-urlencoded',\n    },\n  })\n    .then(response => response.json())\n    .catch(error => console.log(error))\n}\n\nexport function search(params: IParams): Promise<{ result: ISearchRes[] }> {\n  let queries = ''\n  for (const [key, value] of Object.entries(params)) {\n    if (value !== '' && value !== 'all') {\n      queries += `${key}=${value}&`\n    }\n  }\n  return fetch(`${REACT_APP_ENDPOINT_URL}/search?${queries}`, {\n    method: 'GET',\n    headers: {\n      Authorization: `Bearer ${sessionStorage.getItem('token')}`,\n    },\n  })\n    .then(response => response.json())\n    .catch(error => console.error(error))\n}\n\nexport function queryAPI(query: string): Promise<{ [key: string]: string[] }> {\n  return fetch(`${REACT_APP_ENDPOINT_URL}/${query}`, {\n    method: 'GET',\n  })\n    .then(response => response.json())\n    .catch(error => console.log(error))\n}\n\nexport interface IParams {\n  offence: string\n  area: string\n  age: string\n  gender: string\n  year: string\n}\n\nexport interface ISearchRes {\n  LGA: string\n  total: number\n  lat: number\n  lng: number\n}\n","import React, { FocusEvent, FormEvent, useCallback, useState } from 'react'\nimport { Button, Form, FormControl } from 'react-bootstrap'\nimport { validateEmail, validatePassword } from '../../helpers'\nimport { register } from '../../services'\n\ninterface IProps {\n  onHide: () => void\n}\n\nconst SignupForm: React.FC<IProps> = ({ onHide }) => {\n  const [form, setForm] = useState({\n    email: '',\n    emailValid: false,\n    password: '',\n    passwordValid: false,\n    touched: { email: false, password: false },\n  })\n\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    event.stopPropagation()\n    register(form.email, form.password)\n      .then(res => {\n        if (res.message[0] === '0') {\n          onHide()\n        }\n        alert(res.message)\n      })\n      .catch(error => alert(error))\n  }\n\n  const handleBlur = (field: string) => (\n    event: FocusEvent<HTMLInputElement>\n  ) => {\n    setForm({\n      ...form,\n      touched: {\n        ...form.touched,\n        [field]: true,\n      },\n    })\n  }\n\n  const handleChange = useCallback(\n    (event: FormEvent<FormControl>) => {\n      const { name, value } = event.target as HTMLInputElement\n      setForm({\n        ...form,\n        [name]: value,\n        [name + 'Valid']:\n          name === 'email' ? validateEmail(value) : validatePassword(value),\n      })\n    },\n    [form]\n  )\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control\n          required\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Enter email\"\n          value={form.email}\n          onChange={handleChange}\n          isInvalid={!form.emailValid && form.touched.email}\n          onBlur={handleBlur('email')}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide a valid email.\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control\n          required\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={form.password}\n          onChange={handleChange}\n          isInvalid={!form.passwordValid && form.touched.password}\n          onBlur={handleBlur('password')}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          Please provide a valid password, which length should be greater than\n          6.\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Button\n        variant=\"primary\"\n        type=\"submit\"\n        disabled={!form.emailValid || !form.passwordValid}\n      >\n        Submit\n      </Button>\n    </Form>\n  )\n}\n\nexport default SignupForm\n","/**\n * validate email address\n * @param email the email string\n */\nexport function validateEmail(email: string): boolean {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  return re.test(String(email).toLowerCase())\n}\n\n/**\n * validate password\n * length should be greater than 6\n * @param password the password\n */\nexport function validatePassword(password: string): boolean {\n  return password.length > 6\n}\n","import {\n  ErrorMessage,\n  Field,\n  FieldProps,\n  Form,\n  Formik,\n  FormikActions,\n  FormikProps,\n} from 'formik'\nimport React from 'react'\nimport { Button, FormControl, FormGroup, FormLabel } from 'react-bootstrap'\nimport * as Yup from 'yup'\nimport { UserLogin } from '../../services'\n\ninterface IFormValues {\n  email: string\n  password: string\n}\n\ninterface IProps {\n  login: () => void\n  onHide: () => void\n}\n\nconst SigninSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email address'),\n  password: Yup.string()\n    .min(6, 'Too Short!')\n    .max(12, 'Too Long!')\n    .required('Required'),\n})\n\nconst SigninForm: React.FC<IProps> = ({ onHide, login }) => {\n  return (\n    <div>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={SigninSchema}\n        onSubmit={async (\n          values: IFormValues,\n          actions: FormikActions<IFormValues>\n        ) => {\n          try {\n            const loginResponse = await UserLogin(values.email, values.password)\n            if (loginResponse.token) {\n              sessionStorage.setItem('token', loginResponse.token)\n              onHide()\n              login()\n            } else {\n              alert(loginResponse.message)\n              actions.setSubmitting(false)\n            }\n          } catch (error) {\n            alert('email or username is not correct!')\n          }\n        }}\n        render={(formikBag: FormikProps<IFormValues>) => (\n          <Form>\n            <Field\n              name=\"email\"\n              type=\"email\"\n              render={({ field, form }: FieldProps<IFormValues>) => (\n                <FormGroup controlId=\"formBasicEmail\">\n                  <FormLabel>Email address</FormLabel>\n                  <FormControl\n                    placeholder=\"Enter email\"\n                    isInvalid={!!form.errors.email}\n                    {...field}\n                  />\n                  <FormControl.Feedback type=\"invalid\">\n                    <ErrorMessage name=\"email\" />\n                  </FormControl.Feedback>\n                </FormGroup>\n              )}\n            />\n            <Field\n              name=\"password\"\n              render={({ field, form }: FieldProps<IFormValues>) => (\n                <FormGroup controlId=\"formBasicPassword\">\n                  <FormLabel>Password</FormLabel>\n                  <FormControl\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    isInvalid={!!form.errors.password}\n                    {...field}\n                  />\n                  <FormControl.Feedback type=\"invalid\">\n                    <ErrorMessage name=\"password\" />\n                  </FormControl.Feedback>\n                </FormGroup>\n              )}\n            />\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={formikBag.isSubmitting}\n            >\n              Submit\n            </Button>\n          </Form>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default SigninForm\n","import React from 'react'\nimport { Jumbotron } from 'react-bootstrap'\n\nconst BootJumbotron: React.SFC = () => {\n  return (\n    <Jumbotron>\n      <h1>Queensland Government</h1>\n      <p>Reported offender numbers by local government area and crime type</p>\n    </Jumbotron>\n  )\n}\n\nexport default BootJumbotron\n","import React from 'react'\nimport {\n  GoogleMap,\n  Marker,\n  withGoogleMap,\n  withScriptjs,\n} from 'react-google-maps'\nimport { ISearchRes } from '../../services'\n\ninterface IProps {\n  isMarkerShown: boolean\n  data: any\n}\n\nconst Map = withScriptjs(\n  withGoogleMap((props: IProps) => (\n    <GoogleMap\n      defaultZoom={4}\n      defaultCenter={{ lat: -23.116667, lng: 132.133333 }}\n    >\n      {props.isMarkerShown &&\n        props.data &&\n        props.data.map((item: ISearchRes, i: number) => (\n          <Marker key={i} position={{ lat: item.lat, lng: item.lng }} />\n        ))}\n    </GoogleMap>\n  ))\n)\n\nexport default Map\n","import React, { useCallback, useEffect, useState } from 'react'\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormControl,\n  Row,\n  Spinner,\n} from 'react-bootstrap'\nimport {\n  BootJumbotron,\n  BootstrapTable,\n  Map,\n  Navigation,\n} from '../../components'\nimport { IData } from '../../components/BootstrapTable/BootstrapTable'\nimport { IParams, queryAPI, search } from '../../services'\n\ninterface ISelect {\n  offence: string[]\n  area: string[]\n  age: string[]\n  gender: string[]\n  year: string[]\n}\n\nconst Home = () => {\n  const [isLoading, setLoading] = useState(false)\n  const [isShown, setIsShown] = useState(false)\n  const [data, setData] = useState<any>([])\n  const [select, setSelect] = useState<ISelect>({\n    offence: [],\n    area: [],\n    age: [],\n    gender: [],\n    year: [],\n  })\n\n  const [form, setForm] = useState<IParams>({\n    offence: 'Advertising Prostitution',\n    area: 'all',\n    age: 'all',\n    gender: 'all',\n    year: 'all',\n  })\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const offenceArray = await queryAPI('offences')\n      const areaArray = await queryAPI('areas')\n      const ageArray = await queryAPI('ages')\n      const genderArray = await queryAPI('genders')\n      const yearArray = await queryAPI('years')\n      setSelect({\n        ...select,\n        offence: [...select.offence, ...offenceArray.offences],\n        area: [...select.area, ...areaArray.areas],\n        age: [...select.age, ...ageArray.ages],\n        gender: [...select.gender, ...genderArray.genders],\n        year: [...select.year, ...yearArray.years],\n      })\n    }\n    fetchAPI()\n  }, [])\n\n  const fetchData = useCallback(\n    (fetchedData: IData) => setData([...data, fetchedData]),\n    [data]\n  )\n\n  const handleFetch = () => async (event: React.MouseEvent<HTMLElement>) => {\n    if (!sessionStorage.getItem('token')) {\n      alert('Please log in')\n      return\n    }\n    setIsShown(true)\n    setLoading(true)\n    const fetchedData = await search(form)\n    setData([fetchedData.result])\n    setLoading(false)\n  }\n\n  const handleChange = (event: React.FormEvent<FormControl>) => {\n    const { name, value } = event.target as HTMLInputElement\n    setForm({\n      ...form,\n      [name]: value,\n    })\n  }\n\n  const renderSelects = () => {\n    const formSelects = []\n    for (const [key, value] of Object.entries(select)) {\n      let array = value\n\n      if (key !== 'offence') {\n        array = ['all', ...array]\n      }\n\n      formSelects.push(\n        <Form.Group controlId={`Form.${key}Select`} key={key}>\n          <Form.Label>{key}</Form.Label>\n          <Form.Control as=\"select\" onChange={handleChange} name={key}>\n            {array.map((name: string, i: number) => (\n              <option key={i}>{name}</option>\n            ))}\n          </Form.Control>\n        </Form.Group>\n      )\n    }\n    return formSelects\n  }\n\n  return (\n    <React.Fragment>\n      <Navigation onFetch={fetchData} />\n      <BootJumbotron />\n      <Container className=\"mb-5\">\n        <Row>\n          <Col md={4} />\n          <Col>\n            <Form>\n              {renderSelects()}\n              <Form.Row>\n                <Form.Group as={Col} controlId=\"formGridZip\">\n                  <Button variant=\"primary\" onClick={handleFetch()}>\n                    submit\n                  </Button>\n                </Form.Group>\n              </Form.Row>\n            </Form>\n          </Col>\n          <Col md={4} />\n        </Row>\n        {isShown ? (\n          isLoading ? (\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n          ) : (\n            <Row>\n              <Col>\n                <BootstrapTable data={data[0]} />\n              </Col>\n              <Col>\n                <Map\n                  isMarkerShown\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBl_4TBv8ssKrKew8ewisQ3oidXouSyXq8&v=3.exp&libraries=geometry,drawing,places\"\n                  loadingElement={<div style={{ height: `100%` }} />}\n                  containerElement={<div style={{ height: `400px` }} />}\n                  mapElement={<div style={{ height: `100%` }} />}\n                  data={data[0]}\n                />\n              </Col>\n            </Row>\n          )\n        ) : null}\n      </Container>\n    </React.Fragment>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Home } from './pages'\nimport './styles/App.css'\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import 'bootstrap/dist/css/bootstrap.min.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport './styles/index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}